{"mappings":"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,EA3CI,EACJ,SAAS,IACR,sBAAsB;AACtB,GAAI,AAAQ,KAAA,IAAR,EAAmB,OAAO,EAE9B,GAAI,EAAO,cAAc,CAAE,CAC1B,EAAM,IAAI,EAAO,cAAc,AAC/B,qEAAoE;AACpE,kEAAkE;AAClE,oDAAoD;AACpD,GAAI,CACH,EAAI,IAAI,CAAC,MAAO,EAAO,cAAc,CAAG,IAAM,sBAC/C,CAAE,MAAM,EAAG,CACV,EAAM,IACP,CACD,MAEC,EAAM,KAEP,OAAO,CACR,CAEA,SAAS,EAAkB,CAAI,EAC9B,IAAI,EAAM,IACV,GAAI,CAAC,EAAK,MAAO,CAAA,EACjB,GAAI,CAEH,OADA,EAAI,YAAY,CAAG,EACZ,EAAI,YAAY,GAAK,CAC7B,CAAE,MAAO,EAAG,CAAC,CACb,MAAO,CAAA,CACR,CAeA,SAAS,EAAY,CAAK,EACzB,MAAO,AAAiB,YAAjB,OAAO,CACf,C,E,E,O,C,Q,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,iB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,kB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,c,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,wB,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,mB,W,O,C,E,S,C,E,O,E,C,GAxDA,EAAgB,EAAW,EAAO,KAAK,GAAK,EAAW,EAAO,cAAc,EAE5E,EAAyB,EAAW,EAAO,cAAc,EAEzD,EAA0B,EAAW,EAAO,eAAe,EAuC3D,EAAsB,GAAiB,EAAiB,eAIxD,EAAmB,CAAC,GAAiB,EAAiB,aACtD,EAAgC,CAAC,GAAiB,EAAiB,2BAInE,EAA2B,GAAkB,EAAA,KAAW,EAAW,IAAS,gBAAgB,EAM5F,EAAM,IAAK,UAAU;A,G,E,Q,S,C,C,C,E,E,E,O,C,c,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,kB,W,O,C,E,S,C,E,O,E,C,G,ICtDP,EAQQ,E,E,E,S,E,A,E,S,M,C,E,E,S,E,E,S,E,E,SARlB,EAAU,EAAsB,CACnC,OAAQ,EACR,OAAQ,EACR,iBAAkB,EAClB,QAAS,EACT,KAAM,CACP,EAEI,EAAkB,EA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","sources":["<anon>","node_modules/@near-js/providers/lib/fetch.js","node_modules/node-fetch/browser.js","node_modules/stream-http/index.js","node_modules/stream-http/lib/request.js","node_modules/stream-http/lib/capability.js","node_modules/stream-http/lib/response.js","node_modules/xtend/immutable.js","node_modules/builtin-status-codes/browser.js","node_modules/https-browserify/index.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar parcelRequire = $parcel$global[\"parcelRequire726c\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jezKP\", function(module, exports) {\n\"use strict\";\nvar $e00b0f34e44e84ed$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\n\nconst $e00b0f34e44e84ed$var$node_fetch_1 = $e00b0f34e44e84ed$var$__importDefault((parcelRequire(\"dQaoa\")));\n\nconst $e00b0f34e44e84ed$var$http_1 = $e00b0f34e44e84ed$var$__importDefault((parcelRequire(\"4r6Dt\")));\n\nconst $e00b0f34e44e84ed$var$https_1 = $e00b0f34e44e84ed$var$__importDefault((parcelRequire(\"ah6Tu\")));\nconst $e00b0f34e44e84ed$var$httpAgent = new $e00b0f34e44e84ed$var$http_1.default.Agent({\n    keepAlive: true\n});\nconst $e00b0f34e44e84ed$var$httpsAgent = new $e00b0f34e44e84ed$var$https_1.default.Agent({\n    keepAlive: true\n});\nfunction $e00b0f34e44e84ed$var$agent(_parsedURL) {\n    if (_parsedURL.protocol === \"http:\") return $e00b0f34e44e84ed$var$httpAgent;\n    else return $e00b0f34e44e84ed$var$httpsAgent;\n}\nfunction $e00b0f34e44e84ed$var$default_1(resource, init) {\n    return (0, $e00b0f34e44e84ed$var$node_fetch_1.default)(resource, Object.assign({\n        agent: $e00b0f34e44e84ed$var$agent(new URL(resource.toString()))\n    }, init));\n}\nmodule.exports.default = $e00b0f34e44e84ed$var$default_1;\n\n});\nparcelRegister(\"dQaoa\", function(module, exports) {\n\"use strict\";\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof $parcel$global !== \"undefined\") return $parcel$global;\n    throw new Error(\"unable to locate global object\");\n};\nvar globalObject = getGlobal();\nmodule.exports = exports = globalObject.fetch;\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) exports.default = globalObject.fetch.bind(globalObject);\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n\n});\n\nparcelRegister(\"4r6Dt\", function(module, exports) {\n\nvar $beyFQ = parcelRequire(\"beyFQ\");\n\nvar $iiJHK = parcelRequire(\"iiJHK\");\n\nvar $axiyR = parcelRequire(\"axiyR\");\n\nvar $l3iXw = parcelRequire(\"l3iXw\");\n\nvar $eAyj5 = parcelRequire(\"eAyj5\");\nvar $33aed4c400d44776$var$http = module.exports;\n$33aed4c400d44776$var$http.request = function(opts, cb) {\n    if (typeof opts === \"string\") opts = $eAyj5.parse(opts);\n    else opts = $axiyR(opts);\n    // Normally, the page is loaded from http or https, so not specifying a protocol\n    // will result in a (valid) protocol-relative url. However, this won't work if\n    // the protocol is something else, like 'file:'\n    var defaultProtocol = $parcel$global.location.protocol.search(/^https?:$/) === -1 ? \"http:\" : \"\";\n    var protocol = opts.protocol || defaultProtocol;\n    var host = opts.hostname || opts.host;\n    var port = opts.port;\n    var path = opts.path || \"/\";\n    // Necessary for IPv6 addresses\n    if (host && host.indexOf(\":\") !== -1) host = \"[\" + host + \"]\";\n    // This may be a relative url. The browser should always be able to interpret it correctly.\n    opts.url = (host ? protocol + \"//\" + host : \"\") + (port ? \":\" + port : \"\") + path;\n    opts.method = (opts.method || \"GET\").toUpperCase();\n    opts.headers = opts.headers || {};\n    // Also valid opts.auth, opts.mode\n    var req = new $beyFQ(opts);\n    if (cb) req.on(\"response\", cb);\n    return req;\n};\n$33aed4c400d44776$var$http.get = function get(opts, cb) {\n    var req = $33aed4c400d44776$var$http.request(opts, cb);\n    req.end();\n    return req;\n};\n$33aed4c400d44776$var$http.ClientRequest = $beyFQ;\n$33aed4c400d44776$var$http.IncomingMessage = $iiJHK.IncomingMessage;\n$33aed4c400d44776$var$http.Agent = function() {};\n$33aed4c400d44776$var$http.Agent.defaultMaxSockets = 4;\n$33aed4c400d44776$var$http.globalAgent = new $33aed4c400d44776$var$http.Agent();\n$33aed4c400d44776$var$http.STATUS_CODES = $l3iXw;\n$33aed4c400d44776$var$http.METHODS = [\n    \"CHECKOUT\",\n    \"CONNECT\",\n    \"COPY\",\n    \"DELETE\",\n    \"GET\",\n    \"HEAD\",\n    \"LOCK\",\n    \"M-SEARCH\",\n    \"MERGE\",\n    \"MKACTIVITY\",\n    \"MKCOL\",\n    \"MOVE\",\n    \"NOTIFY\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"POST\",\n    \"PROPFIND\",\n    \"PROPPATCH\",\n    \"PURGE\",\n    \"PUT\",\n    \"REPORT\",\n    \"SEARCH\",\n    \"SUBSCRIBE\",\n    \"TRACE\",\n    \"UNLOCK\",\n    \"UNSUBSCRIBE\"\n];\n\n});\nparcelRegister(\"beyFQ\", function(module, exports) {\n\nvar $bdjQ6 = parcelRequire(\"bdjQ6\");\nvar $82dbe60ad5d26611$require$Buffer = $bdjQ6.Buffer;\n\nvar $4ZL0H = parcelRequire(\"4ZL0H\");\n\nvar $7zO5M = parcelRequire(\"7zO5M\");\n\nvar $dhT4G = parcelRequire(\"dhT4G\");\n\nvar $iiJHK = parcelRequire(\"iiJHK\");\n\nvar $dFZZW = parcelRequire(\"dFZZW\");\nvar $82dbe60ad5d26611$var$IncomingMessage = $iiJHK.IncomingMessage;\nvar $82dbe60ad5d26611$var$rStates = $iiJHK.readyStates;\nfunction $82dbe60ad5d26611$var$decideMode(preferBinary, useFetch) {\n    if ($7zO5M.fetch && useFetch) return \"fetch\";\n    else if ($7zO5M.mozchunkedarraybuffer) return \"moz-chunked-arraybuffer\";\n    else if ($7zO5M.msstream) return \"ms-stream\";\n    else if ($7zO5M.arraybuffer && preferBinary) return \"arraybuffer\";\n    else return \"text\";\n}\nvar $82dbe60ad5d26611$var$ClientRequest = module.exports = function(opts) {\n    var self = this;\n    $dFZZW.Writable.call(self);\n    self._opts = opts;\n    self._body = [];\n    self._headers = {};\n    if (opts.auth) self.setHeader(\"Authorization\", \"Basic \" + $82dbe60ad5d26611$require$Buffer.from(opts.auth).toString(\"base64\"));\n    Object.keys(opts.headers).forEach(function(name) {\n        self.setHeader(name, opts.headers[name]);\n    });\n    var preferBinary;\n    var useFetch = true;\n    if (opts.mode === \"disable-fetch\" || \"requestTimeout\" in opts && !$7zO5M.abortController) {\n        // If the use of XHR should be preferred. Not typically needed.\n        useFetch = false;\n        preferBinary = true;\n    } else if (opts.mode === \"prefer-streaming\") // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false;\n    else if (opts.mode === \"allow-wrong-content-type\") // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !$7zO5M.overrideMimeType;\n    else if (!opts.mode || opts.mode === \"default\" || opts.mode === \"prefer-fast\") // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true;\n    else throw new Error(\"Invalid value for opts.mode\");\n    self._mode = $82dbe60ad5d26611$var$decideMode(preferBinary, useFetch);\n    self._fetchTimer = null;\n    self._socketTimeout = null;\n    self._socketTimer = null;\n    self.on(\"finish\", function() {\n        self._onFinish();\n    });\n};\n$dhT4G($82dbe60ad5d26611$var$ClientRequest, $dFZZW.Writable);\n$82dbe60ad5d26611$var$ClientRequest.prototype.setHeader = function(name, value) {\n    var self = this;\n    var lowerName = name.toLowerCase();\n    // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n    // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n    // http-browserify did it, so I will too.\n    if ($82dbe60ad5d26611$var$unsafeHeaders.indexOf(lowerName) !== -1) return;\n    self._headers[lowerName] = {\n        name: name,\n        value: value\n    };\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype.getHeader = function(name) {\n    var header = this._headers[name.toLowerCase()];\n    if (header) return header.value;\n    return null;\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype.removeHeader = function(name) {\n    var self = this;\n    delete self._headers[name.toLowerCase()];\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype._onFinish = function() {\n    var self = this;\n    if (self._destroyed) return;\n    var opts = self._opts;\n    if (\"timeout\" in opts && opts.timeout !== 0) self.setTimeout(opts.timeout);\n    var headersObj = self._headers;\n    var body = null;\n    if (opts.method !== \"GET\" && opts.method !== \"HEAD\") body = new Blob(self._body, {\n        type: (headersObj[\"content-type\"] || {}).value || \"\"\n    });\n    // create flattened list of headers\n    var headersList = [];\n    Object.keys(headersObj).forEach(function(keyName) {\n        var name = headersObj[keyName].name;\n        var value = headersObj[keyName].value;\n        if (Array.isArray(value)) value.forEach(function(v) {\n            headersList.push([\n                name,\n                v\n            ]);\n        });\n        else headersList.push([\n            name,\n            value\n        ]);\n    });\n    if (self._mode === \"fetch\") {\n        var signal = null;\n        if ($7zO5M.abortController) {\n            var controller = new AbortController();\n            signal = controller.signal;\n            self._fetchAbortController = controller;\n            if (\"requestTimeout\" in opts && opts.requestTimeout !== 0) self._fetchTimer = $parcel$global.setTimeout(function() {\n                self.emit(\"requestTimeout\");\n                if (self._fetchAbortController) self._fetchAbortController.abort();\n            }, opts.requestTimeout);\n        }\n        $parcel$global.fetch(self._opts.url, {\n            method: self._opts.method,\n            headers: headersList,\n            body: body || undefined,\n            mode: \"cors\",\n            credentials: opts.withCredentials ? \"include\" : \"same-origin\",\n            signal: signal\n        }).then(function(response) {\n            self._fetchResponse = response;\n            self._resetTimers(false);\n            self._connect();\n        }, function(reason) {\n            self._resetTimers(true);\n            if (!self._destroyed) self.emit(\"error\", reason);\n        });\n    } else {\n        var xhr = self._xhr = new $parcel$global.XMLHttpRequest();\n        try {\n            xhr.open(self._opts.method, self._opts.url, true);\n        } catch (err) {\n            $4ZL0H.nextTick(function() {\n                self.emit(\"error\", err);\n            });\n            return;\n        }\n        // Can't set responseType on really old browsers\n        if (\"responseType\" in xhr) xhr.responseType = self._mode;\n        if (\"withCredentials\" in xhr) xhr.withCredentials = !!opts.withCredentials;\n        if (self._mode === \"text\" && \"overrideMimeType\" in xhr) xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n        if (\"requestTimeout\" in opts) {\n            xhr.timeout = opts.requestTimeout;\n            xhr.ontimeout = function() {\n                self.emit(\"requestTimeout\");\n            };\n        }\n        headersList.forEach(function(header) {\n            xhr.setRequestHeader(header[0], header[1]);\n        });\n        self._response = null;\n        xhr.onreadystatechange = function() {\n            switch(xhr.readyState){\n                case $82dbe60ad5d26611$var$rStates.LOADING:\n                case $82dbe60ad5d26611$var$rStates.DONE:\n                    self._onXHRProgress();\n                    break;\n            }\n        };\n        // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n        // in onprogress, not in onreadystatechange with xhr.readyState = 3\n        if (self._mode === \"moz-chunked-arraybuffer\") xhr.onprogress = function() {\n            self._onXHRProgress();\n        };\n        xhr.onerror = function() {\n            if (self._destroyed) return;\n            self._resetTimers(true);\n            self.emit(\"error\", new Error(\"XHR error\"));\n        };\n        try {\n            xhr.send(body);\n        } catch (err) {\n            $4ZL0H.nextTick(function() {\n                self.emit(\"error\", err);\n            });\n            return;\n        }\n    }\n};\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */ function $82dbe60ad5d26611$var$statusValid(xhr) {\n    try {\n        var status = xhr.status;\n        return status !== null && status !== 0;\n    } catch (e) {\n        return false;\n    }\n}\n$82dbe60ad5d26611$var$ClientRequest.prototype._onXHRProgress = function() {\n    var self = this;\n    self._resetTimers(false);\n    if (!$82dbe60ad5d26611$var$statusValid(self._xhr) || self._destroyed) return;\n    if (!self._response) self._connect();\n    self._response._onXHRProgress(self._resetTimers.bind(self));\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype._connect = function() {\n    var self = this;\n    if (self._destroyed) return;\n    self._response = new $82dbe60ad5d26611$var$IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self));\n    self._response.on(\"error\", function(err) {\n        self.emit(\"error\", err);\n    });\n    self.emit(\"response\", self._response);\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype._write = function(chunk, encoding, cb) {\n    var self = this;\n    self._body.push(chunk);\n    cb();\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype._resetTimers = function(done) {\n    var self = this;\n    $parcel$global.clearTimeout(self._socketTimer);\n    self._socketTimer = null;\n    if (done) {\n        $parcel$global.clearTimeout(self._fetchTimer);\n        self._fetchTimer = null;\n    } else if (self._socketTimeout) self._socketTimer = $parcel$global.setTimeout(function() {\n        self.emit(\"timeout\");\n    }, self._socketTimeout);\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype.abort = $82dbe60ad5d26611$var$ClientRequest.prototype.destroy = function(err) {\n    var self = this;\n    self._destroyed = true;\n    self._resetTimers(true);\n    if (self._response) self._response._destroyed = true;\n    if (self._xhr) self._xhr.abort();\n    else if (self._fetchAbortController) self._fetchAbortController.abort();\n    if (err) self.emit(\"error\", err);\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype.end = function(data, encoding, cb) {\n    var self = this;\n    if (typeof data === \"function\") {\n        cb = data;\n        data = undefined;\n    }\n    $dFZZW.Writable.prototype.end.call(self, data, encoding, cb);\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype.setTimeout = function(timeout, cb) {\n    var self = this;\n    if (cb) self.once(\"timeout\", cb);\n    self._socketTimeout = timeout;\n    self._resetTimers(false);\n};\n$82dbe60ad5d26611$var$ClientRequest.prototype.flushHeaders = function() {};\n$82dbe60ad5d26611$var$ClientRequest.prototype.setNoDelay = function() {};\n$82dbe60ad5d26611$var$ClientRequest.prototype.setSocketKeepAlive = function() {};\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar $82dbe60ad5d26611$var$unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"date\",\n    \"dnt\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"via\"\n];\n\n});\nparcelRegister(\"7zO5M\", function(module, exports) {\n\n$parcel$export(module.exports, \"fetch\", function () { return $5842a8954340b220$export$e7aa7bc5c1b3cfb3; }, function (v) { return $5842a8954340b220$export$e7aa7bc5c1b3cfb3 = v; });\n$parcel$export(module.exports, \"writableStream\", function () { return $5842a8954340b220$export$37489d82087dc5d1; }, function (v) { return $5842a8954340b220$export$37489d82087dc5d1 = v; });\n$parcel$export(module.exports, \"abortController\", function () { return $5842a8954340b220$export$f137bf8a46425a6f; }, function (v) { return $5842a8954340b220$export$f137bf8a46425a6f = v; });\n$parcel$export(module.exports, \"arraybuffer\", function () { return $5842a8954340b220$export$724c4efdc2b90612; }, function (v) { return $5842a8954340b220$export$724c4efdc2b90612 = v; });\n$parcel$export(module.exports, \"msstream\", function () { return $5842a8954340b220$export$a9aa1e45c4448986; }, function (v) { return $5842a8954340b220$export$a9aa1e45c4448986 = v; });\n$parcel$export(module.exports, \"mozchunkedarraybuffer\", function () { return $5842a8954340b220$export$4c3c163e941f6ba3; }, function (v) { return $5842a8954340b220$export$4c3c163e941f6ba3 = v; });\n$parcel$export(module.exports, \"overrideMimeType\", function () { return $5842a8954340b220$export$8f1269d6d73f87ef; }, function (v) { return $5842a8954340b220$export$8f1269d6d73f87ef = v; });\nvar $5842a8954340b220$export$e7aa7bc5c1b3cfb3;\nvar $5842a8954340b220$export$37489d82087dc5d1;\nvar $5842a8954340b220$export$f137bf8a46425a6f;\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nvar $5842a8954340b220$export$724c4efdc2b90612;\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nvar $5842a8954340b220$export$a9aa1e45c4448986;\nvar $5842a8954340b220$export$4c3c163e941f6ba3;\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nvar $5842a8954340b220$export$8f1269d6d73f87ef;\n$5842a8954340b220$export$e7aa7bc5c1b3cfb3 = $5842a8954340b220$var$isFunction($parcel$global.fetch) && $5842a8954340b220$var$isFunction($parcel$global.ReadableStream);\n$5842a8954340b220$export$37489d82087dc5d1 = $5842a8954340b220$var$isFunction($parcel$global.WritableStream);\n$5842a8954340b220$export$f137bf8a46425a6f = $5842a8954340b220$var$isFunction($parcel$global.AbortController);\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar $5842a8954340b220$var$xhr;\nfunction $5842a8954340b220$var$getXHR() {\n    // Cache the xhr value\n    if ($5842a8954340b220$var$xhr !== undefined) return $5842a8954340b220$var$xhr;\n    if ($parcel$global.XMLHttpRequest) {\n        $5842a8954340b220$var$xhr = new $parcel$global.XMLHttpRequest();\n        // If XDomainRequest is available (ie only, where xhr might not work\n        // cross domain), use the page location. Otherwise use example.com\n        // Note: this doesn't actually make an http request.\n        try {\n            $5842a8954340b220$var$xhr.open(\"GET\", $parcel$global.XDomainRequest ? \"/\" : \"https://example.com\");\n        } catch (e) {\n            $5842a8954340b220$var$xhr = null;\n        }\n    } else // Service workers don't have XHR\n    $5842a8954340b220$var$xhr = null;\n    return $5842a8954340b220$var$xhr;\n}\nfunction $5842a8954340b220$var$checkTypeSupport(type) {\n    var xhr = $5842a8954340b220$var$getXHR();\n    if (!xhr) return false;\n    try {\n        xhr.responseType = type;\n        return xhr.responseType === type;\n    } catch (e) {}\n    return false;\n}\n$5842a8954340b220$export$724c4efdc2b90612 = $5842a8954340b220$export$e7aa7bc5c1b3cfb3 || $5842a8954340b220$var$checkTypeSupport(\"arraybuffer\");\n$5842a8954340b220$export$a9aa1e45c4448986 = !$5842a8954340b220$export$e7aa7bc5c1b3cfb3 && $5842a8954340b220$var$checkTypeSupport(\"ms-stream\");\n$5842a8954340b220$export$4c3c163e941f6ba3 = !$5842a8954340b220$export$e7aa7bc5c1b3cfb3 && $5842a8954340b220$var$checkTypeSupport(\"moz-chunked-arraybuffer\");\n$5842a8954340b220$export$8f1269d6d73f87ef = $5842a8954340b220$export$e7aa7bc5c1b3cfb3 || ($5842a8954340b220$var$getXHR() ? $5842a8954340b220$var$isFunction($5842a8954340b220$var$getXHR().overrideMimeType) : false);\nfunction $5842a8954340b220$var$isFunction(value) {\n    return typeof value === \"function\";\n}\n$5842a8954340b220$var$xhr = null // Help gc\n;\n\n});\n\nparcelRegister(\"iiJHK\", function(module, exports) {\n\n$parcel$export(module.exports, \"readyStates\", function () { return $d52d5c65cc8f4c74$export$8e4da25483e314e6; }, function (v) { return $d52d5c65cc8f4c74$export$8e4da25483e314e6 = v; });\n$parcel$export(module.exports, \"IncomingMessage\", function () { return $d52d5c65cc8f4c74$export$9d4333345ffa4fd6; }, function (v) { return $d52d5c65cc8f4c74$export$9d4333345ffa4fd6 = v; });\nvar $d52d5c65cc8f4c74$export$8e4da25483e314e6;\nvar $d52d5c65cc8f4c74$export$9d4333345ffa4fd6;\n\nvar $4ZL0H = parcelRequire(\"4ZL0H\");\n\nvar $bdjQ6 = parcelRequire(\"bdjQ6\");\nvar $d52d5c65cc8f4c74$require$Buffer = $bdjQ6.Buffer;\n\nvar $7zO5M = parcelRequire(\"7zO5M\");\n\nvar $dhT4G = parcelRequire(\"dhT4G\");\n\nvar $dFZZW = parcelRequire(\"dFZZW\");\nvar $d52d5c65cc8f4c74$var$rStates = $d52d5c65cc8f4c74$export$8e4da25483e314e6 = {\n    UNSENT: 0,\n    OPENED: 1,\n    HEADERS_RECEIVED: 2,\n    LOADING: 3,\n    DONE: 4\n};\nvar $d52d5c65cc8f4c74$var$IncomingMessage = $d52d5c65cc8f4c74$export$9d4333345ffa4fd6 = function(xhr, response, mode, resetTimers) {\n    var self = this;\n    $dFZZW.Readable.call(self);\n    self._mode = mode;\n    self.headers = {};\n    self.rawHeaders = [];\n    self.trailers = {};\n    self.rawTrailers = [];\n    // Fake the 'close' event, but only once 'end' fires\n    self.on(\"end\", function() {\n        // The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n        $4ZL0H.nextTick(function() {\n            self.emit(\"close\");\n        });\n    });\n    if (mode === \"fetch\") {\n        self._fetchResponse = response;\n        self.url = response.url;\n        self.statusCode = response.status;\n        self.statusMessage = response.statusText;\n        response.headers.forEach(function(header, key) {\n            self.headers[key.toLowerCase()] = header;\n            self.rawHeaders.push(key, header);\n        });\n        if ($7zO5M.writableStream) {\n            var writable = new WritableStream({\n                write: function(chunk) {\n                    resetTimers(false);\n                    return new Promise(function(resolve, reject) {\n                        if (self._destroyed) reject();\n                        else if (self.push($d52d5c65cc8f4c74$require$Buffer.from(chunk))) resolve();\n                        else self._resumeFetch = resolve;\n                    });\n                },\n                close: function() {\n                    resetTimers(true);\n                    if (!self._destroyed) self.push(null);\n                },\n                abort: function(err) {\n                    resetTimers(true);\n                    if (!self._destroyed) self.emit(\"error\", err);\n                }\n            });\n            try {\n                response.body.pipeTo(writable).catch(function(err) {\n                    resetTimers(true);\n                    if (!self._destroyed) self.emit(\"error\", err);\n                });\n                return;\n            } catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n        }\n        // fallback for when writableStream or pipeTo aren't available\n        var reader = response.body.getReader();\n        function read() {\n            reader.read().then(function(result) {\n                if (self._destroyed) return;\n                resetTimers(result.done);\n                if (result.done) {\n                    self.push(null);\n                    return;\n                }\n                self.push($d52d5c65cc8f4c74$require$Buffer.from(result.value));\n                read();\n            }).catch(function(err) {\n                resetTimers(true);\n                if (!self._destroyed) self.emit(\"error\", err);\n            });\n        }\n        read();\n    } else {\n        self._xhr = xhr;\n        self._pos = 0;\n        self.url = xhr.responseURL;\n        self.statusCode = xhr.status;\n        self.statusMessage = xhr.statusText;\n        var headers = xhr.getAllResponseHeaders().split(/\\r?\\n/);\n        headers.forEach(function(header) {\n            var matches = header.match(/^([^:]+):\\s*(.*)/);\n            if (matches) {\n                var key = matches[1].toLowerCase();\n                if (key === \"set-cookie\") {\n                    if (self.headers[key] === undefined) self.headers[key] = [];\n                    self.headers[key].push(matches[2]);\n                } else if (self.headers[key] !== undefined) self.headers[key] += \", \" + matches[2];\n                else self.headers[key] = matches[2];\n                self.rawHeaders.push(matches[1], matches[2]);\n            }\n        });\n        self._charset = \"x-user-defined\";\n        if (!$7zO5M.overrideMimeType) {\n            var mimeType = self.rawHeaders[\"mime-type\"];\n            if (mimeType) {\n                var charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/);\n                if (charsetMatch) self._charset = charsetMatch[1].toLowerCase();\n            }\n            if (!self._charset) self._charset = \"utf-8\" // best guess\n            ;\n        }\n    }\n};\n$dhT4G($d52d5c65cc8f4c74$var$IncomingMessage, $dFZZW.Readable);\n$d52d5c65cc8f4c74$var$IncomingMessage.prototype._read = function() {\n    var self = this;\n    var resolve = self._resumeFetch;\n    if (resolve) {\n        self._resumeFetch = null;\n        resolve();\n    }\n};\n$d52d5c65cc8f4c74$var$IncomingMessage.prototype._onXHRProgress = function(resetTimers) {\n    var self = this;\n    var xhr = self._xhr;\n    var response = null;\n    switch(self._mode){\n        case \"text\":\n            response = xhr.responseText;\n            if (response.length > self._pos) {\n                var newData = response.substr(self._pos);\n                if (self._charset === \"x-user-defined\") {\n                    var buffer = $d52d5c65cc8f4c74$require$Buffer.alloc(newData.length);\n                    for(var i = 0; i < newData.length; i++)buffer[i] = newData.charCodeAt(i) & 0xff;\n                    self.push(buffer);\n                } else self.push(newData, self._charset);\n                self._pos = response.length;\n            }\n            break;\n        case \"arraybuffer\":\n            if (xhr.readyState !== $d52d5c65cc8f4c74$var$rStates.DONE || !xhr.response) break;\n            response = xhr.response;\n            self.push($d52d5c65cc8f4c74$require$Buffer.from(new Uint8Array(response)));\n            break;\n        case \"moz-chunked-arraybuffer\":\n            response = xhr.response;\n            if (xhr.readyState !== $d52d5c65cc8f4c74$var$rStates.LOADING || !response) break;\n            self.push($d52d5c65cc8f4c74$require$Buffer.from(new Uint8Array(response)));\n            break;\n        case \"ms-stream\":\n            response = xhr.response;\n            if (xhr.readyState !== $d52d5c65cc8f4c74$var$rStates.LOADING) break;\n            var reader = new $parcel$global.MSStreamReader();\n            reader.onprogress = function() {\n                if (reader.result.byteLength > self._pos) {\n                    self.push($d52d5c65cc8f4c74$require$Buffer.from(new Uint8Array(reader.result.slice(self._pos))));\n                    self._pos = reader.result.byteLength;\n                }\n            };\n            reader.onload = function() {\n                resetTimers(true);\n                self.push(null);\n            };\n            // reader.onerror = ??? // TODO: this\n            reader.readAsArrayBuffer(response);\n            break;\n    }\n    // The ms-stream case handles end separately in reader.onload()\n    if (self._xhr.readyState === $d52d5c65cc8f4c74$var$rStates.DONE && self._mode !== \"ms-stream\") {\n        resetTimers(true);\n        self.push(null);\n    }\n};\n\n});\n\n\nparcelRegister(\"axiyR\", function(module, exports) {\nmodule.exports = $7abb6251c8c91105$var$extend;\nvar $7abb6251c8c91105$var$hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction $7abb6251c8c91105$var$extend() {\n    var target = {};\n    for(var i = 0; i < arguments.length; i++){\n        var source = arguments[i];\n        for(var key in source)if ($7abb6251c8c91105$var$hasOwnProperty.call(source, key)) target[key] = source[key];\n    }\n    return target;\n}\n\n});\n\nparcelRegister(\"l3iXw\", function(module, exports) {\nmodule.exports = {\n    \"100\": \"Continue\",\n    \"101\": \"Switching Protocols\",\n    \"102\": \"Processing\",\n    \"200\": \"OK\",\n    \"201\": \"Created\",\n    \"202\": \"Accepted\",\n    \"203\": \"Non-Authoritative Information\",\n    \"204\": \"No Content\",\n    \"205\": \"Reset Content\",\n    \"206\": \"Partial Content\",\n    \"207\": \"Multi-Status\",\n    \"208\": \"Already Reported\",\n    \"226\": \"IM Used\",\n    \"300\": \"Multiple Choices\",\n    \"301\": \"Moved Permanently\",\n    \"302\": \"Found\",\n    \"303\": \"See Other\",\n    \"304\": \"Not Modified\",\n    \"305\": \"Use Proxy\",\n    \"307\": \"Temporary Redirect\",\n    \"308\": \"Permanent Redirect\",\n    \"400\": \"Bad Request\",\n    \"401\": \"Unauthorized\",\n    \"402\": \"Payment Required\",\n    \"403\": \"Forbidden\",\n    \"404\": \"Not Found\",\n    \"405\": \"Method Not Allowed\",\n    \"406\": \"Not Acceptable\",\n    \"407\": \"Proxy Authentication Required\",\n    \"408\": \"Request Timeout\",\n    \"409\": \"Conflict\",\n    \"410\": \"Gone\",\n    \"411\": \"Length Required\",\n    \"412\": \"Precondition Failed\",\n    \"413\": \"Payload Too Large\",\n    \"414\": \"URI Too Long\",\n    \"415\": \"Unsupported Media Type\",\n    \"416\": \"Range Not Satisfiable\",\n    \"417\": \"Expectation Failed\",\n    \"418\": \"I'm a teapot\",\n    \"421\": \"Misdirected Request\",\n    \"422\": \"Unprocessable Entity\",\n    \"423\": \"Locked\",\n    \"424\": \"Failed Dependency\",\n    \"425\": \"Unordered Collection\",\n    \"426\": \"Upgrade Required\",\n    \"428\": \"Precondition Required\",\n    \"429\": \"Too Many Requests\",\n    \"431\": \"Request Header Fields Too Large\",\n    \"451\": \"Unavailable For Legal Reasons\",\n    \"500\": \"Internal Server Error\",\n    \"501\": \"Not Implemented\",\n    \"502\": \"Bad Gateway\",\n    \"503\": \"Service Unavailable\",\n    \"504\": \"Gateway Timeout\",\n    \"505\": \"HTTP Version Not Supported\",\n    \"506\": \"Variant Also Negotiates\",\n    \"507\": \"Insufficient Storage\",\n    \"508\": \"Loop Detected\",\n    \"509\": \"Bandwidth Limit Exceeded\",\n    \"510\": \"Not Extended\",\n    \"511\": \"Network Authentication Required\"\n};\n\n});\n\n\nparcelRegister(\"ah6Tu\", function(module, exports) {\n\nvar $4r6Dt = parcelRequire(\"4r6Dt\");\n\nvar $eAyj5 = parcelRequire(\"eAyj5\");\nvar $77b0d6ed1f49a632$var$https = module.exports;\nfor(var $77b0d6ed1f49a632$var$key in $4r6Dt)if ($4r6Dt.hasOwnProperty($77b0d6ed1f49a632$var$key)) $77b0d6ed1f49a632$var$https[$77b0d6ed1f49a632$var$key] = $4r6Dt[$77b0d6ed1f49a632$var$key];\n$77b0d6ed1f49a632$var$https.request = function(params, cb) {\n    params = $77b0d6ed1f49a632$var$validateParams(params);\n    return $4r6Dt.request.call(this, params, cb);\n};\n$77b0d6ed1f49a632$var$https.get = function(params, cb) {\n    params = $77b0d6ed1f49a632$var$validateParams(params);\n    return $4r6Dt.get.call(this, params, cb);\n};\nfunction $77b0d6ed1f49a632$var$validateParams(params) {\n    if (typeof params === \"string\") params = $eAyj5.parse(params);\n    if (!params.protocol) params.protocol = \"https:\";\n    if (params.protocol !== \"https:\") throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"');\n    return params;\n}\n\n});\n\n\n\n//# sourceMappingURL=fetch.9910b35b.js.map\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst http_1 = __importDefault(require(\"http\"));\nconst https_1 = __importDefault(require(\"https\"));\nconst httpAgent = new http_1.default.Agent({ keepAlive: true });\nconst httpsAgent = new https_1.default.Agent({ keepAlive: true });\nfunction agent(_parsedURL) {\n    if (_parsedURL.protocol === 'http:') {\n        return httpAgent;\n    }\n    else {\n        return httpsAgent;\n    }\n}\nfunction default_1(resource, init) {\n    return (0, node_fetch_1.default)(resource, Object.assign({ agent: agent(new URL(resource.toString())) }, init));\n}\nexports.default = default_1;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","parcelRegister","register","module","exports","$e00b0f34e44e84ed$var$__importDefault","__importDefault","mod","__esModule","value","$e00b0f34e44e84ed$var$node_fetch_1","$e00b0f34e44e84ed$var$http_1","$e00b0f34e44e84ed$var$https_1","$e00b0f34e44e84ed$var$httpAgent","default","Agent","keepAlive","$e00b0f34e44e84ed$var$httpsAgent","resource","init","assign","agent","_parsedURL","URL","toString","protocol","globalObject","getGlobal","Error","fetch","bind","Headers","Request","Response","$beyFQ","$iiJHK","$axiyR","$l3iXw","$eAyj5","$33aed4c400d44776$var$http","request","opts","cb","parse","defaultProtocol","location","search","host","hostname","port","path","indexOf","url","method","toUpperCase","headers","req","on","end","ClientRequest","IncomingMessage","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","$82dbe60ad5d26611$require$Buffer","$bdjQ6","Buffer","$4ZL0H","$7zO5M","$dhT4G","$dFZZW","$82dbe60ad5d26611$var$IncomingMessage","$82dbe60ad5d26611$var$rStates","readyStates","$82dbe60ad5d26611$var$ClientRequest","preferBinary","useFetch","Writable","call","_opts","_body","_headers","auth","setHeader","from","keys","forEach","name","mode","abortController","overrideMimeType","_mode","mozchunkedarraybuffer","msstream","arraybuffer","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","prototype","lowerName","toLowerCase","$82dbe60ad5d26611$var$unsafeHeaders","getHeader","header","removeHeader","_destroyed","timeout","setTimeout","headersObj","body","Blob","type","headersList","keyName","Array","isArray","push","signal","controller","AbortController","_fetchAbortController","requestTimeout","emit","abort","undefined","credentials","withCredentials","then","response","_fetchResponse","_resetTimers","_connect","reason","xhr","_xhr","XMLHttpRequest","open","err","nextTick","responseType","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","$82dbe60ad5d26611$var$statusValid","status","_write","chunk","encoding","done","clearTimeout","destroy","data","once","flushHeaders","setNoDelay","setSocketKeepAlive","$5842a8954340b220$export$e7aa7bc5c1b3cfb3","$5842a8954340b220$export$37489d82087dc5d1","$5842a8954340b220$export$f137bf8a46425a6f","$5842a8954340b220$export$724c4efdc2b90612","$5842a8954340b220$export$a9aa1e45c4448986","$5842a8954340b220$export$4c3c163e941f6ba3","$5842a8954340b220$export$8f1269d6d73f87ef","$5842a8954340b220$var$xhr","$5842a8954340b220$var$getXHR","XDomainRequest","$5842a8954340b220$var$checkTypeSupport","$5842a8954340b220$var$isFunction","ReadableStream","WritableStream","$d52d5c65cc8f4c74$export$8e4da25483e314e6","$d52d5c65cc8f4c74$export$9d4333345ffa4fd6","$d52d5c65cc8f4c74$require$Buffer","$d52d5c65cc8f4c74$var$rStates","UNSENT","OPENED","HEADERS_RECEIVED","$d52d5c65cc8f4c74$var$IncomingMessage","resetTimers","Readable","rawHeaders","trailers","rawTrailers","statusCode","statusMessage","statusText","key","writableStream","writable","write","Promise","resolve","reject","_resumeFetch","close","pipeTo","catch","reader","getReader","read","result","_pos","responseURL","getAllResponseHeaders","split","matches","match","_charset","mimeType","charsetMatch","_read","responseText","length","newData","substr","buffer","alloc","i","charCodeAt","Uint8Array","MSStreamReader","byteLength","slice","onload","readAsArrayBuffer","target","arguments","source","$7abb6251c8c91105$var$hasOwnProperty","hasOwnProperty","$4r6Dt","$77b0d6ed1f49a632$var$https","$77b0d6ed1f49a632$var$key","$77b0d6ed1f49a632$var$validateParams","params"],"version":3,"file":"fetch.9910b35b.js.map"}